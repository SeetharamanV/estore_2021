swagger: '2.0'
info:
  description: Estores API endpoints
  title: Estores API
  version: '1.0'
host: 'localhost:9090'
basePath: /estores
tags:
  - name: health-controller
    description: Health Controller
  - name: items-controller
    description: Items Controller
paths:
  /health:
    get:
      tags:
        - health-controller
      summary: getHealth
      operationId: getHealthUsingGET
      produces:
        - application/json
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '404':
          description: Not found
        '500':
          description: Internal server error
      deprecated: false
  /v1/items:
    get:
      tags:
        - items-controller
      summary: getAllItems
      operationId: getAllItemsUsingGET
      produces:
        - application/json
      parameters:
        - name: page
          in: query
          description: A Non-Zero Non-Negative number.
          required: false
          type: integer
          default: 1
          format: int32
          allowEmptyValue: false
          x-example: 1
        - name: size
          in: query
          description: A Non-Zero Non-Negative number.
          required: false
          type: integer
          default: 5
          format: int32
          allowEmptyValue: false
          x-example: 5
        - name: sortAscending
          in: query
          description: 'Ascending set true, Descending set false'
          required: false
          type: boolean
          default: true
          allowEmptyValue: false
          x-example: true
        - name: sortByParam
          in: query
          description: 'values from this list [id, name, description, brand, category, barcode, price]'
          required: false
          type: string
          default: id
          allowEmptyValue: false
          x-example: id
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PageItem'
        '400':
          description: Bad Request
        '404':
          description: Not found
        '500':
          description: Internal server error
      deprecated: false
    post:
      tags:
        - items-controller
      summary: createItem
      operationId: createItemUsingPOST
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: itemRequest
          description: itemRequest
          required: true
          schema:
            $ref: '#/definitions/ItemRequest'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/Item'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
      deprecated: false
  '/v1/items/{item_id}':
    get:
      tags:
        - items-controller
      summary: getItemById
      operationId: getItemByIdUsingGET
      produces:
        - application/json
      parameters:
        - name: item_id
          in: path
          description: item_id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Item'
        '400':
          description: Bad Request
        '404':
          description: Not found
        '500':
          description: Internal server error
      deprecated: false
    put:
      tags:
        - items-controller
      summary: updateItem
      operationId: updateItemUsingPUT
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: item
          description: item
          required: true
          schema:
            $ref: '#/definitions/Item'
        - name: item_id
          in: path
          description: item_id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Item'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
      deprecated: false
    delete:
      tags:
        - items-controller
      summary: deleteItemById
      operationId: deleteItemByIdUsingDELETE
      produces:
        - application/json
      parameters:
        - name: item_id
          in: path
          description: item_id
          required: true
          type: integer
          format: int64
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
      deprecated: false
definitions:
  Item:
    type: object
    required:
      - barcode
      - brand
      - category
      - description
      - id
      - name
      - price
    properties:
      barcode:
        type: string
      brand:
        type: string
      category:
        type: string
      description:
        type: string
      id:
        type: integer
        format: int64
      name:
        type: string
      price:
        type: number
        format: double
    title: Item
  ItemRequest:
    type: object
    required:
      - barcode
      - brand
      - category
      - description
      - name
    properties:
      name:
        type: string
      description:
        type: string
      brand:
        type: string
      category:
        type: string
      barcode:
        type: string
      price:
        type: number
        format: double
    title: ItemRequest
  Pageable:
    type: object
    properties:
      offset:
        type: integer
        format: int64
      page_number:
        type: integer
        format: int32
      page_size:
        type: integer
        format: int32
      paged:
        type: boolean
      sort:
        $ref: '#/definitions/Sort'
      unpaged:
        type: boolean
    title: Pageable
  PageItem:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/Item'
      empty:
        type: boolean
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      pageable:
        $ref: '#/definitions/Pageable'
      size:
        type: integer
        format: int32
      sort:
        $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«Item»
  Sort:
    type: object
    properties:
      empty:
        type: boolean
      sorted:
        type: boolean
      unsorted:
        type: boolean
    title: Sort
